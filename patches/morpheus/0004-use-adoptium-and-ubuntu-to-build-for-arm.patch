From e9dcbe5fd3652e9d7f62e6fca5c0f817dfd29d2f Mon Sep 17 00:00:00 2001
From: Michele Sciabarra <michele@nuvolaris.io>
Date: Sun, 25 Dec 2022 12:10:16 +0000
Subject: [PATCH 4/5] use adoptium and ubuntu to build for arm

---
 .gitignore                                 |  1 +
 common/scala/Dockerfile                    | 18 +++++++++++++-----
 core/controller/Dockerfile                 | 19 ++++++++++---------
 core/cosmosdb/cache-invalidator/Dockerfile |  3 ++-
 core/invoker/Dockerfile                    |  7 ++++---
 core/monitoring/user-events/Dockerfile     |  3 ++-
 core/scheduler/Dockerfile                  |  3 ++-
 tools/github/setup.sh                      |  8 +++++---
 8 files changed, 39 insertions(+), 23 deletions(-)

diff --git a/.gitignore b/.gitignore
index 7a15a629..62724411 100644
--- a/.gitignore
+++ b/.gitignore
@@ -100,3 +100,4 @@ core/routemgmt/getApi/utils.js
 # vscode metals
 .bloop/
 .metals/
+.git-hooks/
diff --git a/common/scala/Dockerfile b/common/scala/Dockerfile
index c7ebd2b9..fff30d22 100644
--- a/common/scala/Dockerfile
+++ b/common/scala/Dockerfile
@@ -15,16 +15,24 @@
 # limitations under the License.
 #
 # if you change version of openjsk, also update tools/github/setup.sh to download the corresponding jdk
-FROM adoptopenjdk/openjdk11-openj9:x86_64-alpine-jdk-11.0.12_7_openj9-0.27.0
+FROM ubuntu:22.04
+RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
+RUN apt-get update && apt-get -y upgrade &&\
+    apt-get -y install software-properties-common apt-utils \
+    curl wget gpg unzip zip vim telnet \
+    silversearcher-ag inetutils-ping locales &&\
+    locale-gen en_US.UTF-8
+
+# installing openjdk
+RUN bash -c 'x86_64="https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.17%2B8/OpenJDK11U-jdk_x64_linux_hotspot_11.0.17_8.tar.gz" ;\
+aarch64="https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.17%2B8/OpenJDK11U-jdk_aarch64_linux_hotspot_11.0.17_8.tar.gz";\
+arch=$(arch) ; JDK=${!arch} ; curl -sL $JDK | tar xzvf - -C /usr/local ;\
+ln -sf /usr/local/jdk-*/bin/java /usr/bin/java'
 
 ENV LANG en_US.UTF-8
 ENV LANGUAGE en_US:en
 ENV LC_ALL en_US.UTF-8
 
-# Switch to the HTTPS endpoint for the apk repositories as per https://github.com/gliderlabs/docker-alpine/issues/184
-RUN sed -i 's/http\:\/\/dl-cdn.alpinelinux.org/https\:\/\/alpine.global.ssl.fastly.net/g' /etc/apk/repositories
-RUN apk add --update sed curl bash && apk update && apk upgrade
-
 RUN mkdir /logs
 
 COPY transformEnvironment.sh /
diff --git a/core/controller/Dockerfile b/core/controller/Dockerfile
index 28793532..f704f95f 100644
--- a/core/controller/Dockerfile
+++ b/core/controller/Dockerfile
@@ -30,11 +30,11 @@ ENV SWAGGER_UI_DOWNLOAD_SHA256=3d7ef5ddc59e10f132fe99771498f0f1ba7a2cbfb9585f986
 # If this cannot be guaranteed, set `invoker_use_runc: false` in the ansible env.
 ENV DOCKER_VERSION=18.06.3-ce
 
-RUN apk add --update openssl
+#RUN apk add --update openssl
 
 # Uncomment to fetch latest version of docker instead: RUN wget -qO- https://get.docker.com | sh
 # Install docker client
-RUN curl -sSL -o docker-${DOCKER_VERSION}.tgz https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz && \
+RUN curl -sSL -o docker-${DOCKER_VERSION}.tgz https://download.docker.com/linux/static/stable/$(arch)/docker-${DOCKER_VERSION}.tgz && \
     tar --strip-components 1 -xvzf docker-${DOCKER_VERSION}.tgz -C /usr/bin docker/docker && \
     tar --strip-components 1 -xvzf docker-${DOCKER_VERSION}.tgz -C /usr/bin docker/docker-runc && \
     rm -f docker-${DOCKER_VERSION}.tgz && \
@@ -43,12 +43,12 @@ RUN curl -sSL -o docker-${DOCKER_VERSION}.tgz https://download.docker.com/linux/
 ##################################################################################################
 
 # Install swagger-ui
-RUN curl -sSL -o swagger-ui-v${SWAGGER_UI_VERSION}.tar.gz --no-verbose https://github.com/swagger-api/swagger-ui/archive/v${SWAGGER_UI_VERSION}.tar.gz && \
-    echo "${SWAGGER_UI_DOWNLOAD_SHA256}  swagger-ui-v${SWAGGER_UI_VERSION}.tar.gz" | sha256sum -c - && \
-    mkdir swagger-ui && \
-    tar zxf swagger-ui-v${SWAGGER_UI_VERSION}.tar.gz -C /swagger-ui --strip-components=2 swagger-ui-${SWAGGER_UI_VERSION}/dist && \
-    rm swagger-ui-v${SWAGGER_UI_VERSION}.tar.gz && \
-    sed -i s#http://petstore.swagger.io/v2/swagger.json#/api/v1/api-docs#g /swagger-ui/index.html
+#RUN curl -sSL -o swagger-ui-v${SWAGGER_UI_VERSION}.tar.gz --no-verbose https://github.com/swagger-api/swagger-ui/archive/v${SWAGGER_UI_VERSION}.tar.gz && \
+#    echo "${SWAGGER_UI_DOWNLOAD_SHA256}  swagger-ui-v${SWAGGER_UI_VERSION}.tar.gz" | sha256sum -c - && \
+#    mkdir swagger-ui && \
+#    tar zxf swagger-ui-v${SWAGGER_UI_VERSION}.tar.gz -C /swagger-ui --strip-components=2 swagger-ui-${SWAGGER_UI_VERSION}/dist && \
+#    rm swagger-ui-v${SWAGGER_UI_VERSION}.tar.gz && \
+#    sed -i s#http://petstore.swagger.io/v2/swagger.json#/api/v1/api-docs#g /swagger-ui/index.html
 
 # Copy app jars
 ADD build/distributions/controller.tar /
@@ -56,7 +56,8 @@ ADD build/distributions/controller.tar /
 COPY init.sh /
 RUN chmod +x init.sh
 
-RUN adduser -D -u ${UID} -h /home/${NOT_ROOT_USER} -s /bin/bash ${NOT_ROOT_USER}
+#RUN adduser -D -u ${UID} -h /home/${NOT_ROOT_USER} -s /bin/bash ${NOT_ROOT_USER}
+RUN useradd -m -u ${UID} -d /home/${NOT_ROOT_USER} -s /bin/bash ${NOT_ROOT_USER}
 
 # It is possible to run as non root if you dont need invoker capabilities out of the controller today
 # When running it as a non-root user this has implications on the standard directory where runc stores its data.
diff --git a/core/cosmosdb/cache-invalidator/Dockerfile b/core/cosmosdb/cache-invalidator/Dockerfile
index e8df8575..3cc1e2a8 100644
--- a/core/cosmosdb/cache-invalidator/Dockerfile
+++ b/core/cosmosdb/cache-invalidator/Dockerfile
@@ -27,7 +27,8 @@ ADD build/distributions/cache-invalidator.tar /
 COPY init.sh /
 RUN chmod +x init.sh
 
-RUN adduser -D -u ${UID} -h /home/${NOT_ROOT_USER} -s /bin/bash ${NOT_ROOT_USER}
+#RUN adduser -D -u ${UID} -h /home/${NOT_ROOT_USER} -s /bin/bash ${NOT_ROOT_USER}
+RUN useradd -m -u ${UID} -d /home/${NOT_ROOT_USER} -s /bin/bash ${NOT_ROOT_USER}
 USER ${NOT_ROOT_USER}
 
 EXPOSE 8080
diff --git a/core/invoker/Dockerfile b/core/invoker/Dockerfile
index ca1561d7..c721e0fe 100644
--- a/core/invoker/Dockerfile
+++ b/core/invoker/Dockerfile
@@ -25,11 +25,11 @@ ENV UID=1001 \
 # If this cannot be guaranteed, set `invoker_use_runc: false` in the ansible env.
 
 
-RUN apk add --update openssl
+#RUN apk add --update openssl
 
 # Uncomment to fetch latest version of docker instead: RUN wget -qO- https://get.docker.com | sh
 # Install docker client
-RUN curl -sSL -o docker-${DOCKER_VERSION}.tgz https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz && \
+RUN curl -sSL -o docker-${DOCKER_VERSION}.tgz https://download.docker.com/linux/static/stable/$(arch)/docker-${DOCKER_VERSION}.tgz && \
     tar --strip-components 1 -xvzf docker-${DOCKER_VERSION}.tgz -C /usr/bin docker/docker && \
     tar --strip-components 1 -xvzf docker-${DOCKER_VERSION}.tgz -C /usr/bin docker/docker-runc && \
     rm -f docker-${DOCKER_VERSION}.tgz && \
@@ -43,7 +43,8 @@ RUN chmod +x init.sh
 
 # When running the invoker as a non-root user this has implications on the standard directory where runc stores its data.
 # The non-root user should have access on the directory and corresponding permission to make changes on it.
-RUN adduser -D -u ${UID} -h /home/${NOT_ROOT_USER} -s /bin/bash ${NOT_ROOT_USER}
+#RUN adduser -D -u ${UID} -h /home/${NOT_ROOT_USER} -s /bin/bash ${NOT_ROOT_USER}
+RUN useradd -m -u ${UID} -d /home/${NOT_ROOT_USER} -s /bin/bash ${NOT_ROOT_USER}
 
 EXPOSE 8080
 CMD ["./init.sh", "0"]
diff --git a/core/monitoring/user-events/Dockerfile b/core/monitoring/user-events/Dockerfile
index 95b06ae8..6b2df680 100644
--- a/core/monitoring/user-events/Dockerfile
+++ b/core/monitoring/user-events/Dockerfile
@@ -26,7 +26,8 @@ ADD build/distributions/user-events.tar /
 COPY init.sh /
 RUN chmod +x init.sh
 
-RUN adduser -D -u ${UID} -h /home/${NOT_ROOT_USER} -s /bin/bash ${NOT_ROOT_USER}
+#RUN adduser -D -u ${UID} -h /home/${NOT_ROOT_USER} -s /bin/bash ${NOT_ROOT_USER}
+RUN useradd -m -u ${UID} -d /home/${NOT_ROOT_USER} -s /bin/bash ${NOT_ROOT_USER}
 USER ${NOT_ROOT_USER}
 
 # Prometheus port
diff --git a/core/scheduler/Dockerfile b/core/scheduler/Dockerfile
index 244d80d7..9a297b93 100644
--- a/core/scheduler/Dockerfile
+++ b/core/scheduler/Dockerfile
@@ -26,7 +26,8 @@ ADD build/distributions/scheduler.tar /
 COPY init.sh /
 RUN chmod +x init.sh
 
-RUN adduser -D -u ${UID} -h /home/${NOT_ROOT_USER} -s /bin/bash ${NOT_ROOT_USER}
+#RUN adduser -D -u ${UID} -h /home/${NOT_ROOT_USER} -s /bin/bash ${NOT_ROOT_USER}
+RUN useradd -m -u ${UID} -d /home/${NOT_ROOT_USER} -s /bin/bash ${NOT_ROOT_USER}
 USER ${NOT_ROOT_USER}
 
 EXPOSE 8080
diff --git a/tools/github/setup.sh b/tools/github/setup.sh
index aefb2104..597396c9 100755
--- a/tools/github/setup.sh
+++ b/tools/github/setup.sh
@@ -43,9 +43,11 @@ sudo sed -i -e 's!/usr/bin/dockerd -H fd://!/usr/bin/dockerd -H tcp://0.0.0.0:42
 sudo systemctl daemon-reload
 sudo systemctl start docker
 
-# installing right version of jdk
-JDK=https://github.com/ibmruntimes/semeru11-binaries/releases/download/jdk-11.0.12%2B7_openj9-0.27.0/ibm-semeru-open-jdk_x64_linux_11.0.12_7_openj9-0.27.0.tar.gz
-curl -sL $JDK | sudo tar xzvf - -C /usr/local
+# installing openjdk
+x86_64="https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.17%2B8/OpenJDK11U-jdk_x64_linux_hotspot_11.0.17_8.tar.gz" ;\
+aarch64="https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.17%2B8/OpenJDK11U-jdk_aarch64_linux_hotspot_11.0.17_8.tar.gz";\
+arch=$(arch) ; JDK=${!arch} ; curl -sL $JDK | sudo tar xzvf - -C /usr/local
+
 JAVA="$(which java)"
 sudo mv "$JAVA" "$JAVA"."$(date +%s)"
 sudo ln -sf /usr/local/jdk*/bin/java $JAVA
-- 
2.34.1

