# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    meta.helm.sh/release-name: redpanda
    meta.helm.sh/release-namespace: redpanda
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-2.5.1
  name: redpanda
  namespace: nuvolaris
spec:
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: redpanda
                  app.kubernetes.io/name: redpanda
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --smp=1
        - --memory=2048M
        - --reserve-memory=205
        - --default-log-level=info
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.nuvolaris.svc.cluster.local.:33145
        - --advertise-pandaproxy-addr=internal://$(SERVICE_NAME).redpanda.nuvolaris.svc.cluster.local.:8082,default://$(SERVICE_NAME).redpanda.nuvolaris.svc.cluster.local.:30082,
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: vectorized/redpanda:v22.3.10
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              curl -sv http://localhost:9644/v1/cluster/health_overview
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
          protocol: TCP
        - containerPort: 8082
          name: http
          protocol: TCP
        - containerPort: 8083
          name: http-default
          protocol: TCP
        - containerPort: 9093
          name: kafka
          protocol: TCP
        - containerPort: 9094
          name: kafka-default
          protocol: TCP
        - containerPort: 33145
          name: rpc
          protocol: TCP
        - containerPort: 8081
          name: schemaregistry
          protocol: TCP
        - containerPort: 8080
          name: schema-default
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              curl -sv http://localhost:9644/v1/cluster/health_overview | awk '{
                id = $0; gsub(/.*"controller_id": /, "", id); gsub(/,.*/, "", id)
                nd_str = $0; gsub(/.*"nodes_down": \[/, "", nd_str); gsub(/\].*/, "", nd_str)
                FS=","
                split(nd_str, nd_list)
                for (i in nd_list) nodes_down[nd_list[i]]=""
                exit (id in nodes_down)
              }'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "1"
            memory: 2560Mi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              curl -sv http://localhost:9644/v1/cluster/health_overview | awk '{
                id = $0; gsub(/.*"controller_id": /, "", id); gsub(/,.*/, "", id)
                nd_str = $0; gsub(/.*"nodes_down": \[/, "", nd_str); gsub(/\].*/, "", nd_str)
                FS=","
                split(nd_str, nd_list)
                for (i in nd_list) nodes_down[nd_list[i]]=""
                exit (id in nodes_down)
              }'
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /etc/redpanda
          name: config
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - /bin/sh
        - -c
        - chown 101:101 -R /var/lib/redpanda/data
        image: busybox:latest
        imagePullPolicy: Always
        name: set-datadir-ownership
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - |
          set -xe
          CONFIG=/etc/redpanda/redpanda.yaml
          POD_ORDINAL=${SERVICE_NAME##*-}

          # Setup config files
          cp /tmp/base-config/redpanda.yaml "${CONFIG}"
          cp /tmp/base-config/bootstrap.yaml /etc/redpanda/.bootstrap.yaml

          # Configure internal kafka listeners
          rpk redpanda --config "$CONFIG" config set redpanda.advertised_kafka_api[0].name internal
          rpk redpanda --config "$CONFIG" config set redpanda.advertised_kafka_api[0].address $(SERVICE_NAME).redpanda.nuvolaris.svc.cluster.local.
          rpk redpanda --config "$CONFIG" config set redpanda.advertised_kafka_api[0].port 9093

          # Configure external kafka listeners
          rpk redpanda --config "$CONFIG" config set redpanda.advertised_kafka_api[1].address $(SERVICE_NAME).local
          rpk redpanda --config "$CONFIG" config set redpanda.advertised_kafka_api[1].name default
          rpk redpanda --config "$CONFIG" config set redpanda.advertised_kafka_api[1].port 31092
        command:
        - /bin/sh
        - -c
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: EXTERNAL_ADDRESSES
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: vectorized/redpanda:v22.3.10
        imagePullPolicy: IfNotPresent
        name: redpanda-configurator
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp/base-config
          name: redpanda
        - mountPath: /etc/redpanda
          name: config
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 101
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
      - configMap:
          defaultMode: 420
          name: redpanda
        name: redpanda
      - emptyDir: {}
        name: config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
      volumeMode: Filesystem
    status:
      phase: Pending
