# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
version: '3'

vars:   
  # preallocated elastic ip and dns pointing to that IP
  HOSTNAME: "54.196.247.123"

tasks:
  create: 
      cmds:
        - scp -i ./microk8s/id_rsa -o "StrictHostKeyChecking=no" ./microk8s/setup.sh ubuntu@{{.HOSTNAME}}:setup.sh
        - ssh -i ./microk8s/id_rsa -o "StrictHostKeyChecking=no" ubuntu@{{.HOSTNAME}} 'chmod 744 setup.sh'
        - ssh -i ./microk8s/id_rsa -o "StrictHostKeyChecking=no" ubuntu@{{.HOSTNAME}} './setup.sh'

  destroy: 
      cmds:
        - ssh -i ./microk8s/id_rsa -o "StrictHostKeyChecking=no" ubuntu@{{.HOSTNAME}} 'sudo snap remove microk8s'        

  config: 
      cmds:        
        - scp -i ./microk8s/id_rsa -o "StrictHostKeyChecking=no" ubuntu@{{.HOSTNAME}}:kubeconfig kubeconfig
        - cp kubeconfig ~/.kube/config
        - kubectl get nodes

  deploy:    
    cmds:
      - kubectl apply -f microk8s/k8s-staging-issuer.yaml
      - kubectl apply -f microk8s/k8s-prod-issuer.yaml
      - kubectl apply -f common/namespace.yaml
      - "kubectl -n {{.NAMESPACE}} apply -f common/echo1.yaml"
      - "kubectl -n {{.NAMESPACE}} apply -f common/echo2.yaml"      
      - until kubectl get svc --all-namespaces ; do date; sleep 1; echo ""; done      
      - "kubectl -n {{.NAMESPACE}} apply -f microk8s/k8s-echo-ingress.yaml"        